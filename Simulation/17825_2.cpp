#include <iostream>
#include <vector>

using namespace std;

//BOJ 주사위 윷놀이 [17925](https://www.acmicpc.net/problem/17825)

int yok[33][6] = {
    {0, 1, 2, 3, 4, 5},//0
    {2, 2, 3, 4, 5, 6},//1
    {4, 3, 4, 5, 6, 7},//2
    {6, 4, 5, 6, 7, 8},//3
    {8, 5, 6, 7, 8, 9},//4

    {10, 21, 22, 23, 29, 30},//5
    {12, 7, 8, 9, 10, 11},//6
    {14, 8, 9, 10, 11, 12},//7
    {16, 9, 10, 11, 12, 13},//8
    {18, 10, 11, 12, 13, 14},//9

    {20, 27, 28, 29, 30, 31},//10
    {22, 12, 13, 14, 15, 16},//11
    {24, 13, 14, 15, 16, 17},//12
    {26, 14, 15, 16, 17, 18},//13
    {28, 15, 16, 17, 18, 19},//14

    {30, 24, 25, 26, 29, 30},//15
    {32, 17, 18, 19, 20, 32},//16
    {34, 18, 19, 20, 32, 32},//17
    {36, 19, 20, 32, 32, 32},//18
    {38, 20, 32, 32, 32, 32},//19

    {40, 32, 32, 32, 32, 32},//20
    {13, 22, 23, 29, 30, 31},//21
    {16, 23, 29, 30, 31, 20},//22
    {19, 29, 30, 31, 20, 32},//23
    {28, 25, 26, 29, 30, 31},//24

    {27, 26, 29, 30, 31, 20},//25
    {26, 29, 30, 31, 20, 32},//26
    {23, 28, 29, 30, 31, 20},//27
    {24, 29, 30, 31, 20, 32},//28
    {25, 30, 31, 20, 32, 32},//29

    {30, 31, 20, 32, 32, 32},//30
    {35, 20, 32, 32, 32, 32},//31
    {0, 32, 32, 32, 32, 32}};//32

int dice[11];
int pos[4];
int ans = 0;
int movement[11];

int calc()
{
    pos[0] = pos[1] = pos[2] = pos[3] = 0; //0번 자리에 위치한다.
    int res = 0;
    for (int i = 0; i < 10; i++)
    {
        //각 턴마다 움직일 말들이 이미 정해져있다.
        int who = movement[i];            //움직일 말의 인덱스
        int end = yok[pos[who]][dice[i]]; //도착 지점

        if (end != 32)
        {
            for (int j = 0; j < 4; j++)
            {
                if (j == who) continue;
                if (pos[j] == end)
                {
                    return -1;
                }
            }
        }

        //포인트 더해줌
        res += yok[end][0];
        pos[who] = end;
    }
    return res;
}
void dfs(int cnt)
{
    if (cnt == 10)
    {
        int res = calc();
        ans = ans > res ? ans : res;
        return;
    }

    for (int i = 0; i < 4; i++)
    {
        movement[cnt] = i;
        dfs(cnt + 1);
    }
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    for (int i = 0; i < 10; i++)
        cin >> dice[i];

    //해당 말이 도착하는 지점에 다른 말이 없으면 일단 움직인다.
    //dfs로 구현

    dfs(0);
    cout << ans << '\n';
    return 0;
}